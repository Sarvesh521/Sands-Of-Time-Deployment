name: Django CI/CD

on:
  push:
    branches: [main]

jobs:
  build-image:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
        
    - name: Build image & push to docker hub
      uses: mr-smithers-excellent/docker-build-push@v6
      with:
        image: sarvesh717/sands-of-time
        tags: v2
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }} 

  deploy-container:
    needs: build-image
    runs-on: ubuntu-latest
    if: ${{ success() }}
    steps:
    - name: executing remote ssh commands
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.EC2_HOST }}
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.EC2_SSH_KEY }}
        script: |
          echo "Listing folders in home directory:"
          ls -lah ~
          
          # Use the absolute path in home directory for the repository
          REPO_DIR=~/Sands-Of-Time-Deployment
          if [ -d "$REPO_DIR" ]; then
            echo "Directory exists, pulling latest changes..."
            cd "$REPO_DIR"
            git pull origin main
          else
            echo "Directory not found; cloning repository..."
            git clone https://github.com/Sarvesh521/Sands-Of-Time-Deployment.git "$REPO_DIR"
            cd "$REPO_DIR"
          fi

          echo "Checking for Docker installation..."
          if ! command -v docker >/dev/null 2>&1; then
            echo "Docker not installed, installing docker..."
            sudo apt-get update && sudo apt-get install -y docker.io
          else
            echo "Docker is installed."
          fi

          echo "Checking for Docker Compose installation..."
          if ! command -v docker-compose >/dev/null 2>&1; then
            echo "docker-compose not installed, installing docker-compose..."
            sudo apt-get update && sudo apt-get install -y docker-compose
          else
            echo "docker-compose is installed."
          fi

          echo "Pulling latest images from docker hub:"
          sudo docker-compose pull

          echo "Listing docker images:"
          sudo docker image ls

          echo "Starting containers with docker-compose:"
          sudo docker-compose up -d || true

          echo "Listing running containers:"
          sudo docker ps -a

          echo "Deployment complete."